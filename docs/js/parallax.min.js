let viewportTop=document.documentElement.clientHeight,parallaxParent=(768<window.innerWidth&&window.addEventListener("scroll",parallaxHome),document.querySelectorAll("[data-parallax-parent]")),parallaxElement=document.querySelectorAll("[data-parallax-element]"),smallerElement,smallerElementHeight,smallerElementSpeed,parentHeight,heightDifference,tranfsorm,currentTransform;function parallaxHome(e){parallaxParent.forEach(e=>{e.getBoundingClientRect().top<=+viewportTop&&(smallerElement=e.firstElementChild.getBoundingClientRect().height>e.firstElementChild.nextElementSibling.getBoundingClientRect().height?e.firstElementChild.nextElementSibling:e.firstElementChild,console.clear(),console.log("Высота экрана = "+viewportTop),console.log("Позиция в документе(Rect().top) = "+smallerElement.getBoundingClientRect().top),console.log("Прокрутка сверху(pageYOffset) = "+window.pageYOffset),parentHeight=e.getBoundingClientRect().height,console.log("Высота родителя = "+parentHeight),smallerElementHeight=smallerElement.getBoundingClientRect().height,console.log("Высота блока = "+smallerElementHeight),heightDifference=parentHeight-smallerElementHeight,console.log("Разница высот = "+heightDifference),smallerElementSpeed=parentHeight/heightDifference,console.log("Скорость сдвига(parentHeight / heightDifference) = "+smallerElementSpeed),tranfsorm=window.pageYOffset/smallerElementSpeed,console.log("Трансформ = "+tranfsorm),currentTransform=parseInt(smallerElement.style.transform.match(/[-0-9.]+(?=px)/)),console.log("Текущий трансформ на блоке = "+currentTransform),console.log(smallerElement),currentTransform<heightDifference||window.pageYOffset<heightDifference||window.pageYOffset<currentTransform)&&window.pageYOffset<parentHeight&&(smallerElement.style.transform=`translateY(${tranfsorm}px)`)})}console.log(parallaxElement),parallaxElement.forEach(e=>{e.style.transform="translateY(0px)"}),parallaxHome(),window.addEventListener("scroll",parallaxImage);let parallaxImages=document.querySelectorAll("[data-parallax-image]"),elHeight,elSpeed,elPosition;function parallaxImage(e){parallaxImages.forEach(e=>{e.getBoundingClientRect().top<=+viewportTop&&(e.style.opacity="1",console.clear(),console.log("Позиция в документе(Rect().top) = "+e.getBoundingClientRect().top),console.log("Прокрутка сверху(pageYOffset) = "+window.pageYOffset),elHeight=e.getBoundingClientRect().height,console.log("Высота блока = "+elHeight),elPosition=window.pageYOffset+e.getBoundingClientRect().top,console.log("Summ = "+elPosition),elSpeed=elHeight/e.nextElementSibling.getBoundingClientRect().height,console.log("Speed = "+elSpeed),tranfsorm=window.pageYOffset/elPosition*elHeight-elHeight,console.log("Трансформ = "+tranfsorm),console.log(e),e.style.transform=`translateY(${tranfsorm}px)`)})}parallaxImages.forEach(e=>{e.style.transform="translateY(0px)",e.style.opacity="0",e.style.transition="opacity 2s ease 1s"}),parallaxImage();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
