let viewportTop=document.documentElement.clientHeight,parallaxParent=(window.addEventListener("scroll",parallax),document.querySelectorAll("[data-parallax-parent]")),parallaxElement=document.querySelectorAll("[data-parallax-element]"),smallerElement,smallerElementHeight,smallerElementSpeed,parentHeight,heightDifference,tranfsorm,currentTransform;function parallax(e){parallaxParent.forEach(e=>{e.getBoundingClientRect().top<=+viewportTop&&(smallerElement=e.firstElementChild.getBoundingClientRect().height>e.firstElementChild.nextElementSibling.getBoundingClientRect().height?e.firstElementChild.nextElementSibling:e.firstElementChild,console.clear(),console.log(e.getBoundingClientRect().top),console.log("Прокрутка сверху = "+window.pageYOffset),parentHeight=e.getBoundingClientRect().height,console.log("Высота родителя = "+parentHeight),smallerElementHeight=smallerElement.getBoundingClientRect().height,console.log("Высота блока = "+smallerElementHeight),heightDifference=parentHeight-smallerElementHeight,console.log("Разница высот = "+heightDifference),smallerElementSpeed=parentHeight/heightDifference,console.log("Скорость сдвига = "+smallerElementSpeed),tranfsorm=window.pageYOffset/smallerElementSpeed,currentTransform=parseInt(smallerElement.style.transform.match(/[-0-9.]+(?=px)/)),console.log("Текущий трансформ = "+currentTransform),currentTransform<heightDifference||window.pageYOffset<heightDifference||window.pageYOffset<currentTransform)&&window.pageYOffset<parentHeight&&(smallerElement.style.transform=`translateY(${tranfsorm}px)`)})}console.log(parallaxElement),parallaxElement.forEach(e=>{e.style.transform="translateY(0px)"}),parallax();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYWxsYXgubWluLmpzIiwic291cmNlcyI6WyJwYXJhbGxheC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgdmlld3BvcnRUb3AgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgcGFyYWxsYXgpO1xuXG5sZXQgcGFyYWxsYXhQYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtcGFyYWxsYXgtcGFyZW50XVwiKTtcbmxldCBwYXJhbGxheEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtcGFyYWxsYXgtZWxlbWVudF1cIik7XG5sZXQgc21hbGxlckVsZW1lbnQ7XG5sZXQgc21hbGxlckVsZW1lbnRIZWlnaHQ7XG5sZXQgc21hbGxlckVsZW1lbnRTcGVlZDtcbmxldCBwYXJlbnRIZWlnaHQ7XG5sZXQgaGVpZ2h0RGlmZmVyZW5jZTtcbmxldCB0cmFuZnNvcm07XG5sZXQgY3VycmVudFRyYW5zZm9ybTtcbmNvbnNvbGUubG9nKHBhcmFsbGF4RWxlbWVudCk7XG5cbnBhcmFsbGF4RWxlbWVudC5mb3JFYWNoKChlbCkgPT4ge1xuICAgZWwuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGVZKDBweClcIjtcbn0pO1xucGFyYWxsYXgoKTtcbmZ1bmN0aW9uIHBhcmFsbGF4KGUpIHtcbiAgIHBhcmFsbGF4UGFyZW50LmZvckVhY2goKGVsKSA9PiB7XG4gICAgICBpZiAoZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIDw9IHZpZXdwb3J0VG9wIC8gMSkge1xuICAgICAgICAgaWYgKFxuICAgICAgICAgICAgZWwuZmlyc3RFbGVtZW50Q2hpbGQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0ID5cbiAgICAgICAgICAgIGVsLmZpcnN0RWxlbWVudENoaWxkLm5leHRFbGVtZW50U2libGluZy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHRcbiAgICAgICAgICkge1xuICAgICAgICAgICAgc21hbGxlckVsZW1lbnQgPSBlbC5maXJzdEVsZW1lbnRDaGlsZC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc21hbGxlckVsZW1lbnQgPSBlbC5maXJzdEVsZW1lbnRDaGlsZDtcbiAgICAgICAgIH1cbiAgICAgICAgIGNvbnNvbGUuY2xlYXIoKTtcbiAgICAgICAgIGNvbnNvbGUubG9nKGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCk7XG4gICAgICAgICBjb25zb2xlLmxvZyhcItCf0YDQvtC60YDRg9GC0LrQsCDRgdCy0LXRgNGF0YMgPSBcIiArIHdpbmRvdy5wYWdlWU9mZnNldCk7XG4gICAgICAgICAvLyBjb25zb2xlLmxvZyhcItCS0YvRgdC+0YLQsCDQstGM0Y7Qv9C+0YDRgtCwID0gXCIgKyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KTtcbiAgICAgICAgIHBhcmVudEhlaWdodCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgIGNvbnNvbGUubG9nKFwi0JLRi9GB0L7RgtCwINGA0L7QtNC40YLQtdC70Y8gPSBcIiArIHBhcmVudEhlaWdodCk7XG4gICAgICAgICBzbWFsbGVyRWxlbWVudEhlaWdodCA9IHNtYWxsZXJFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgIGNvbnNvbGUubG9nKFwi0JLRi9GB0L7RgtCwINCx0LvQvtC60LAgPSBcIiArIHNtYWxsZXJFbGVtZW50SGVpZ2h0KTtcbiAgICAgICAgIGhlaWdodERpZmZlcmVuY2UgPSBwYXJlbnRIZWlnaHQgLSBzbWFsbGVyRWxlbWVudEhlaWdodDtcbiAgICAgICAgIGNvbnNvbGUubG9nKFwi0KDQsNC30L3QuNGG0LAg0LLRi9GB0L7RgiA9IFwiICsgaGVpZ2h0RGlmZmVyZW5jZSk7XG4gICAgICAgICBzbWFsbGVyRWxlbWVudFNwZWVkID0gcGFyZW50SGVpZ2h0IC8gaGVpZ2h0RGlmZmVyZW5jZTtcbiAgICAgICAgIGNvbnNvbGUubG9nKFwi0KHQutC+0YDQvtGB0YLRjCDRgdC00LLQuNCz0LAgPSBcIiArIHNtYWxsZXJFbGVtZW50U3BlZWQpO1xuICAgICAgICAgdHJhbmZzb3JtID0gd2luZG93LnBhZ2VZT2Zmc2V0IC8gc21hbGxlckVsZW1lbnRTcGVlZDtcbiAgICAgICAgIGN1cnJlbnRUcmFuc2Zvcm0gPSBwYXJzZUludChzbWFsbGVyRWxlbWVudC5zdHlsZS50cmFuc2Zvcm0ubWF0Y2goL1stMC05Ll0rKD89cHgpLykpO1xuICAgICAgICAgY29uc29sZS5sb2coXCLQotC10LrRg9GJ0LjQuSDRgtGA0LDQvdGB0YTQvtGA0LwgPSBcIiArIGN1cnJlbnRUcmFuc2Zvcm0pO1xuXG4gICAgICAgICAvLyAhIERvbmVcbiAgICAgICAgIGlmIChcbiAgICAgICAgICAgIChjdXJyZW50VHJhbnNmb3JtIDwgaGVpZ2h0RGlmZmVyZW5jZSB8fFxuICAgICAgICAgICAgICAgd2luZG93LnBhZ2VZT2Zmc2V0IDwgaGVpZ2h0RGlmZmVyZW5jZSB8fFxuICAgICAgICAgICAgICAgd2luZG93LnBhZ2VZT2Zmc2V0IDwgY3VycmVudFRyYW5zZm9ybSkgJiZcbiAgICAgICAgICAgIHdpbmRvdy5wYWdlWU9mZnNldCA8IHBhcmVudEhlaWdodFxuICAgICAgICAgKSB7XG4gICAgICAgICAgICBzbWFsbGVyRWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWSgke3RyYW5mc29ybX1weClgO1xuICAgICAgICAgfVxuICAgICAgfVxuICAgfSk7XG59XG4iXSwibmFtZXMiOlsibGV0Iiwidmlld3BvcnRUb3AiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudEhlaWdodCIsInBhcmFsbGF4UGFyZW50Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhcmFsbGF4IiwicXVlcnlTZWxlY3RvckFsbCIsInBhcmFsbGF4RWxlbWVudCIsInNtYWxsZXJFbGVtZW50Iiwic21hbGxlckVsZW1lbnRIZWlnaHQiLCJzbWFsbGVyRWxlbWVudFNwZWVkIiwicGFyZW50SGVpZ2h0IiwiaGVpZ2h0RGlmZmVyZW5jZSIsInRyYW5mc29ybSIsImN1cnJlbnRUcmFuc2Zvcm0iLCJlIiwiZm9yRWFjaCIsImVsIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJoZWlnaHQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJjb25zb2xlIiwiY2xlYXIiLCJsb2ciLCJwYWdlWU9mZnNldCIsInBhcnNlSW50Iiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJtYXRjaCJdLCJtYXBwaW5ncyI6IkFBQUFBLElBQUlDLFlBQWNDLFNBQVNDLGdCQUFnQkMsYUFHdkNDLGdCQUZKQyxPQUFPQyxpQkFBaUIsU0FBVUMsUUFBUSxFQUVyQk4sU0FBU08saUJBQWlCLHdCQUF3QixHQUNuRUMsZ0JBQWtCUixTQUFTTyxpQkFBaUIseUJBQXlCLEVBQ3JFRSxlQUNBQyxxQkFDQUMsb0JBQ0FDLGFBQ0FDLGlCQUNBQyxVQUNBQyxpQkFPSixTQUFTVCxTQUFTVSxHQUNmYixlQUFlYyxRQUFRLElBQ2hCQyxFQUFHQyxzQkFBc0IsRUFBRUMsS0FBT3JCLENBQUFBLGNBS2hDVSxlQUhBUyxFQUFHRyxrQkFBa0JGLHNCQUFzQixFQUFFRyxPQUM3Q0osRUFBR0csa0JBQWtCRSxtQkFBbUJKLHNCQUFzQixFQUFFRyxPQUUvQ0osRUFBR0csa0JBQWtCRSxtQkFFckJMLEVBQUdHLGtCQUV2QkcsUUFBUUMsTUFBTSxFQUNkRCxRQUFRRSxJQUFJUixFQUFHQyxzQkFBc0IsRUFBRUMsR0FBRyxFQUMxQ0ksUUFBUUUsSUFBSSxzQkFBd0J0QixPQUFPdUIsV0FBVyxFQUV0RGYsYUFBZU0sRUFBR0Msc0JBQXNCLEVBQUVHLE9BQzFDRSxRQUFRRSxJQUFJLHFCQUF1QmQsWUFBWSxFQUMvQ0YscUJBQXVCRCxlQUFlVSxzQkFBc0IsRUFBRUcsT0FDOURFLFFBQVFFLElBQUksa0JBQW9CaEIsb0JBQW9CLEVBQ3BERyxpQkFBbUJELGFBQWVGLHFCQUNsQ2MsUUFBUUUsSUFBSSxtQkFBcUJiLGdCQUFnQixFQUNqREYsb0JBQXNCQyxhQUFlQyxpQkFDckNXLFFBQVFFLElBQUkscUJBQXVCZixtQkFBbUIsRUFDdERHLFVBQVlWLE9BQU91QixZQUFjaEIsb0JBQ2pDSSxpQkFBbUJhLFNBQVNuQixlQUFlb0IsTUFBTUMsVUFBVUMsTUFBTSxnQkFBZ0IsQ0FBQyxFQUNsRlAsUUFBUUUsSUFBSSx1QkFBeUJYLGdCQUFnQixFQUlqREEsaUJBQW1CRixrQkFDakJULE9BQU91QixZQUFjZCxrQkFDckJULE9BQU91QixZQUFjWixtQkFDeEJYLE9BQU91QixZQUFjZixlQUVyQkgsZUFBZW9CLE1BQU1DLHdCQUEwQmhCLGVBR3hELENBQUMsQ0FDSixDQTVDQVUsUUFBUUUsSUFBSWxCLGVBQWUsRUFFM0JBLGdCQUFnQlMsUUFBUSxJQUNyQkMsRUFBR1csTUFBTUMsVUFBWSxpQkFDeEIsQ0FBQyxFQUNEeEIsU0FBUyJ9
